package main

import (
	"time"

	"github.com/antoniomoreno27/logs-LS/internal/controllers"
	"github.com/antoniomoreno27/logs-LS/internal/domain"
	"github.com/antoniomoreno27/logs-LS/internal/services/logger"
	"github.com/antoniomoreno27/logs-LS/internal/services/report"
)

func main() {
	const (
		cookie string = `X-User-Config={"is_first_log_in":false,"first_login_date":"2023-02-22T13:55:21.603Z","created_at":"2023-02-22T13:55:21.689732Z","updated_at":"2023-02-22T13:55:21.819947Z"}; _hjSessionUser_2198413=eyJpZCI6ImQ0YWQ5OTVhLWU1ZDUtNWM5Ny05YTllLTlmZDIzOTc5NjFmNSIsImNyZWF0ZWQiOjE2ODExMzk4MzIxNzEsImV4aXN0aW5nIjp0cnVlfQ==; X-Token-v1={"user":"antmoreno","expiration":1681434027,"information":{"full_name":"Antonio Jose Moreno Saavedra","email":"antonio.moreno@mercadolibre.com.co"},"permits":[]}; GCP_IAP_UID=111900338572415708059; _gid=GA1.2.2087916043.1682082463; X-Tiger-Token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImQ0ZDlhMGQzLWM4YTItNDY0Yi1hMGE5LWU3MWM2OTA0MjExNiIsInR5cCI6IkpXVCJ9.eyJhZGRpdGlvbmFsX2luZm8iOnsiZW1haWwiOiJhbnRvbmlvLm1vcmVub0BtZXJjYWRvbGlicmUuY29tLmNvIiwiZnVsbF9uYW1lIjoiQW50b25pbyBKb3NlIE1vcmVubyBTYWF2ZWRyYSIsInVzZXJuYW1lIjoiYW50bW9yZW5vIn0sImV4cCI6MTY4MjExNDg3MywiaWF0IjoxNjgyMDgyNDczLCJpZGVudGl0eSI6Im1ybjpzZWdpbmY6YWQ6dXNlci9hbnRtb3Jlbm8iLCJpc3MiOiJmdXJ5X3RpZ2VyIiwic3ViIjoiYW50bW9yZW5vIn0.XWlBGfWTKTq_-nyFqEEBBWeNc3pTHHIeFaUhHqKHeVxteBO7NYrLuHOUy2Mdz-c8wmKrOZvlcniU7RUPwcXHiq7ek2TBWK4kK4lEOg4et378Iiz6hfH0U3JC-v6GEy8P0ckpGbbXgpCcqYcNjNysEIVonFOIkAnkPSMG-M0KB3gOUmfuPmfvCyZIzRYi8d7x_b2Hk-SxMUgjtAJj6pLz01rJMiQb_0R3zwF8DJLgXCCkmZBG5bl2KExp-6CSD9cEGEVW3uCfSmkDtJ20Fb4Pb1b9f6q9oMGcTBGmuPNJfPMGdhPQxMW9dM1h13iPrnmVfXTKViCK5Ll3s4YdeV6JAQ; X-Fury-Session={"user":"antmoreno","expiration":1682114873}; _ga=GA1.2.2068187428.1681139831; _ga_28MSZRPJS9=GS1.1.1682096040.31.1.1682096488.0.0.0; _ga_B8RXSJLEJE=GS1.1.1682096451.1.0.1682096498.0.0.0; GCP_IAP_XSRF_NONCE_MvykDgmVAHziTEXAXwHhXg=1; GCP_IAAP_AUTH_TOKEN_35A08D1094D01B32=eyJhbGciOiJSUzI1NiIsImtpZCI6Ijg2OTY5YWVjMzdhNzc4MGYxODgwNzg3NzU5M2JiYmY4Y2Y1ZGU1Y2UiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI3NzM1Mzk2Mzc1OTYtOGoxdXNtODEyamVoaGo3aHJmcmVjNW5wa2loMWVndDAuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI3NzM1Mzk2Mzc1OTYtOGoxdXNtODEyamVoaGo3aHJmcmVjNW5wa2loMWVndDAuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTE5MDAzMzg1NzI0MTU3MDgwNTkiLCJoZCI6Im1lcmNhZG9saWJyZS5jb20uY28iLCJlbWFpbCI6ImFudG9uaW8ubW9yZW5vQG1lcmNhZG9saWJyZS5jb20uY28iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiYXRfaGFzaCI6IjVhOThzaUFXNnJ0T214WTJrNnkwcFEiLCJnb29nbGUiOnsiZ2ljIjoiQUFGandjWENmWWpoUTZDOG9xeXdZWElnSDlVRE84UHJZdGptRnZpVXBCQ2U4OTJYQWFJSUIyOGQ2akU0a0lNLW50ekdRS1BPMUxUUk0yaUVwMG00cnZiRmtQSUhvTk9yenQxZlFmN19ac1E2cFJLZkZINXVwQXhSNjJxVXlfa3Q0MUtQNEtlQ2lTSXFpVGk3dGJrS0NXVGZMRXNGWGpnQi1HaUVpWFJrNHVHQWVLREoxVWJVOHo3VEZLV3VsUEFGeGIwYVNFN2RtREZ2eW9ZWGRlaTJwcGNCVmtIQTFvbW9tQllpeWcifSwiaWF0IjoxNjgyMTExMjYwLCJleHAiOjE2ODIxMTQ4NjB9.Csp3B7yIr9bqPUlqJd-DWkrYRyxjzNClL3vUTaAw69FwdYNcV02jnEhSjQz1X-PD88Z-5yncG3jO91IeBTY3RkN1caK2UOJYJXvhxpV1od55JEehPCSwKtLEjTRXdHqzZrg2A7DCpZ8sjNf6anoPxaUFfxKmcJmKbKTMa6ky-EmHPLd9gL7gaBv3IT0dKmPsWuYfTzA-H7SgLyyXbgOCoVLiCcfM3euqff0OrzzlB9S3pFX0z65da6BUVOzROT3TuuX6o8oNR3OSbpCdvHrPKP87r4Yce_Up3jLW-dQJ8h6HGlBZyzPjXh1hcKzDaMCUQHkg1dhSGDd2B-pz46Cc2w; __Secure-GCP_IAP_AUTH_TOKEN_35A08D1094D01B32=AafDaA684JesWO5rD893mahA7n444flvT5lpJ8moBYOiQcIuiHtIWVuyLICK-G7WcNml8mwhL3Tbb7d5pBoo3bTf1QXS01altJeGXqr1UFjfomujm4Hufi2_KDTM3gv6mLm5Y78YjdAj54fMwmmasoeeorjFvAvViBRwHQ5u9sfRwKlbIji91u_OntnrSTeao62L5q4ovExuWI6ABTLzD0Pu4v85vcte0nSzlo9gzCO0929xhIdltsGx-iFn7xB5MxAevwdUmD4PlOQXSiG-WQup5kRswmIWSr9T39XnX19CP_j9oy_nog-votiqnyGYfGr0A4k1YhpvvevsZwqy0VEFTQzyDtyZ4-gd3nWN39TF9hcPxpmt-xr1w4ADC7CQQF47k0ISMNHR21mRKimVHn752-KT9JKJb0kuCGaLJWjTTzBXIIwPWUETLMOi07vRG2puxlRWGo0ttVMvaC2CdOWfcCMy8V3-oe5mBXgA5dREXhX3xE6vhSFwhQ9VFFQqzCK_Qtg0G_ysifAF1Nm8q2M6xThIX3Snz9bBKgi2tjEgC-UjB_ksSlvcSeUpm3UEcHZM9m93wH97YYW-afHPBPfyknaTEMKz9FbKx-KAGxgYKRKsRl5cy7lRqBFqsWtmlm6vt7nSqk16j1uHmwS7Imx_zqQ-aTxIkcy5XPz3kLpXEaxioWXdJiHNnyDLNxThaF4fMM4w16LcxbCNHlKpSPbp9qRlvUSq_0PN9vQZidShjMA4Kh6bk4ucEFnKcOf6eL-dPAwNNr5m-4Ro2QwYljl6YPE7jVz6cZxSQWkAhWtaoRApvVwFpkQk-zau0cBAu1kSjdVfwqGJD_fjL0W1Kpme01qpg_Cmd4M45U2BJ_yk9nKeeoFngMbll_e3-KQYVLaCRO0xj1nz7JyVrLPl_-2h5M1BDEDSe4uH67R10Gvd6BIs-MJg2jNzZ3call7hrMhvDw9Wq-7ksagTVFKZ-IcG3YyoL7ViizZzTuOhOR5ZjOGHPpI3CHfid7Mq_9DOGqcD8TrtmHIyNMfBAVLTILKzUfVQX9G0hYBtUmrSa7k5ykuEG7OpQbellUkr9pCJji8jXmk3PMqtn-bkNg31FuTGCHAcPhCwSUow8Fcy0HLcJdVij5liazxg6lMyaVWA1zaOf0FjsvYADXQtKQEoX-NJOppJkJZ4ubplkpnAt0UeLduI6e3Bdtdc3YeKrZSSvYFw2p_3YEvNyxjbxZP84YM5-GhPDIoYlAfm0yLcOUuD3zOBjPkWFCavRj0GZy4Ta8xdqX48ySxUdI1zHU2mcGkE5vnR9NvsjwKuAbEsoWRTsZJ7B4cMCU5_EdIIg0d-F4kpA98-mfU9HvGBWahM2vLUQ-YZpkgab_4FChIqQyJGluEfuxBXQ0KI9Zr_QV4BLpNjj2x7XdGa7ePn5nbt10Ahd3QQlQJJlushnAYbnRhNMylVulPC4VMv_LaamTI8Rr5Bwe1-VqW8SPPKVVyTQnsK8eF8uhjgHly0KD2IT1vrbLX_Ie-lL5sAJjBYAdc8sNBwkpxxSA6VP-nNPlhFPcutpMwD_CSPo265JATVjz6pInI3nXD5WX7bHobD_71zR_kcDKGtBt_tkjtpotssKS-Pujcvr1CH69yLdmzUrD835C60fjWa27VNZlGzT-BLIj-Ui4k3zm-TLtq1PFdUjrz8Wj3zzhHmOTKS1W8pXO_w_c2jIU2skzmWWXkAv6WxBXUskZMydMyqwyEGiMjAeHOSXqdv7LtzN3Ypc9Gbe9iL3eM8BEPQmKo_fKhJgoGCyachzY5ojITg0CzpoCK7J-jzQAH69nhQi4DcY-6t2BGz31dw-4RUcsisNyXoRIobfUVEQWQ4sFIeA0pyNWWoPCjYPOwGNvKdC0iMXyInakIlyJr2fUuiWTSosIMmG17BSuQt8ks; security_storage=Fe26.2**e95f93facbcab481461912ab4a1b734e5f01e46b99fe0e6628997074acce6a2a*BFWaj9WxU10RMRU2iXxUDw*AdyCsgzkfh1Hfygjo7ro_Z33b9dfgZHyhdlKbm22Acp19bosN9dtVUlI3Djrgz2QQp01Xp_xMddbJkoS5JIhCXpFn9USvTwFWMCziY3gYf0kM_xLGHDGheF7gq63Khj5CcTEOC3J5vzKN2EPY0U2mCqYZ3KtDfKiE9YGtTT0AIkBbuauR1yyycN4aQKOgI5_2LySfz6Uh5L0MAvRIzwXUwSJAx4SQY38z_IkWukldLDEDZX5LV5sxWWwkrfwiraS**d28275bb5c0bd72e6c3ac1642373399a3d639ad2a2fe84c745d62a81de114281*8gvoub4PQYFiRnjtdog9mZXWTsL_XILNhaak9us-mEk; security_authentication=Fe26.2**939de6122e138873589716f1913d17a4d283fe7fd5c6dbb4edc62c5c4579b157*ZbzrsBV0cq4ZVmyTj6M_tw*5ORRaDvWJHTZInTmFO2yZteffbb_PSorAqKW3Pzus-EdPUJQvVPoSCJNrenrtl9Eqf9HiwkFXGaZdfAkeaM5cYZKNonaMDWWJ8u7SYaNpjtC6mug31eaPsiX5275GfP0RjvoS-lw_vfn-lVp4jnH8nTih8afPsdxBKJsLDuat0pXFrOUIV-Qh7G-8GajDT3FZpibJa900qIeOYZmGS54BYDzgh_op8p6-M4k3C9ujfjY6xeXeoENdx84B7kDQ9ruBPROoYj2ZVGRc7o9JHklLPrKdgkJM74afMggovOFIk2uzjIuj6Ji1NOB327Q7j87SQm_Rgz0sB-Oc1zwSpqpQUJM2Ln9iKKByIhckhlAiORqfmuWeu5VtcSS044heJY4jdg8uIzcS1hU56EGG1DYW4mT6VpFLlYgTVQNZUGOEm0WFzg6gEtRnZyX0hKEnsozoAxoTdW7Fk6DMiWW_lrGS8Pmi_mRS0OnLMA__1rW1RNRtWix6_LAQ0JxAV6_mlRrgCXGAbPaLPIouXDmy3C6rtd9W53yINSqX-tgtAwp9Mg3OOiCO79toLwOdqSX0cVHJ52Hf-EGLKZhKw_IbzkN2sxPqiVktIphyjE4mp2TLxk**fec578197570ac1fa2a1bb3caeba24cbb66cb2d331e096566a38ad1af560d754*LmRlVceuKBwVZ6jll8BwPJSxBslVWLjIjweVcrvI5ng`
	)
	logger.Warnf("Configurating Report")
	timeWindowSample, err := time.ParseDuration("2m")
	if err != nil {
		logger.Panic("bat time window sample definition")
	}
	rs, err := report.New(
		cookie,
		domain.Report{
			Name:             "parse_error.csv",
			Path:             "./reports",
			Query:            "Error retrieving iterator next data",
			TimeWindowSample: timeWindowSample,
			StartDate:        time.Date(2023, time.April, 18, 19, 58, 0, 0, time.UTC),
			FinishDate:       time.Date(2023, time.April, 19, 0, 22, 0, 0, time.UTC),
		},
	)
	if err != nil {
		panic(err)
	}
	reportController := controllers.Report{
		ReportService: rs,
	}
	reportController.Create()
}
